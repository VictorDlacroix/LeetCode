class Solution {
public:
    vector<vector<int>> subsets(vector<int>& nums) {
        vector<vector<int>> res;
        vector<int> tmp;
        res.push_back(tmp);
        for(int i = 0; i < nums.size(); i++){
            int t = res.size();
            for(int j = 0; j < t; j++){
                tmp = res[j];
                tmp.push_back(nums[i]);
                res.push_back(tmp);
            }
        }
        return res;
    }
};


class Solution {
public:
    vector<vector<int>> subsets(vector<int>& nums) {
        vector<vector<int>> all;
        vector<int> v;
        
        _subsets(nums, 0, v, all);
        
        return all;
    }
    
    void _subsets(vector<int>& A, int i, vector<int> s, vector<vector<int>>& all) {
        if (i == A.size()) {
            all.push_back(s);
            return;
        }
        
        // not including A[i]
        _subsets(A, i+1, s, all);
        
        // including A[i]
        s.push_back(A[i]);
        _subsets(A, i+1, s, all);
    }
};
