class Solution {
public:
    void permute(vector<int> nums, int i, vector<vector<int>>& ans){
        if(i == nums.size()){
            ans.push_back(nums);
            return;
        }
        for(int j = i; j < nums.size(); j++){
            swap(nums[i], nums[j]);
            permute(nums, i + 1, ans);
            swap(nums[i], nums[j]);
        }
    }
    
    vector<vector<int>> permute(vector<int>& nums) {
        vector<vector<int>> ans;
        permute(nums, 0, ans);
        return ans;
    }
};



//next_permutation能自动生成一个序列的不同排列
vector<vector<int>> permute(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        vector<vector<int>> v;
        do{
            v.push_back(nums);
        }while(next_permutation(nums.begin(),nums.end()));
        return v;
    }
