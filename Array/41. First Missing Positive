class Solution {
public:
    int firstMissingPositive(vector<int>& nums) {
        int n = nums.size(), i;
        vector<bool> a(n);
        for(auto x: nums) if(x <= n && x> 0) a[x-1] = true;
        for(i = 0; i < n && a[i]; ++i);
        return i+1;
    }
};


//最优解法
class Solution {
public:
    int firstMissingPositive(vector<int>& nums) {
        int n = nums.size();
            
        for(int i = 0; i < n; ++ i)
            while(nums[i] > 0 && nums[i] <= n && nums[nums[i] - 1] != nums[i])
                swap(nums[i], nums[nums[i] - 1]);
        
        for(int i = 0; i < n; ++ i)
            if(nums[i] != i + 1)
                return i + 1;
        
        return n + 1;


    }
};
